#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrjTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBMSProjectTest")]
	public partial class DBMSProjectTestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertENROLL(ENROLL instance);
    partial void UpdateENROLL(ENROLL instance);
    partial void DeleteENROLL(ENROLL instance);
    partial void InsertSAccount(SAccount instance);
    partial void UpdateSAccount(SAccount instance);
    partial void DeleteSAccount(SAccount instance);
    partial void InsertScore(Score instance);
    partial void UpdateScore(Score instance);
    partial void DeleteScore(Score instance);
    partial void InsertSessionss(Sessionss instance);
    partial void UpdateSessionss(Sessionss instance);
    partial void DeleteSessionss(Sessionss instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSTUDY(STUDY instance);
    partial void UpdateSTUDY(STUDY instance);
    partial void DeleteSTUDY(STUDY instance);
    partial void InsertTAccount(TAccount instance);
    partial void UpdateTAccount(TAccount instance);
    partial void DeleteTAccount(TAccount instance);
    partial void InsertTEACH(TEACH instance);
    partial void UpdateTEACH(TEACH instance);
    partial void DeleteTEACH(TEACH instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    #endregion
		
		public DBMSProjectTestDataContext() : 
				base(global::PrjTest.Properties.Settings.Default.DBMSProjectTestConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DBMSProjectTestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMSProjectTestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMSProjectTestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMSProjectTestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<ENROLL> ENROLLs
		{
			get
			{
				return this.GetTable<ENROLL>();
			}
		}
		
		public System.Data.Linq.Table<SAccount> SAccounts
		{
			get
			{
				return this.GetTable<SAccount>();
			}
		}
		
		public System.Data.Linq.Table<Score> Scores
		{
			get
			{
				return this.GetTable<Score>();
			}
		}
		
		public System.Data.Linq.Table<Sessionss> Sessionsses
		{
			get
			{
				return this.GetTable<Sessionss>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<STUDY> STUDies
		{
			get
			{
				return this.GetTable<STUDY>();
			}
		}
		
		public System.Data.Linq.Table<TAccount> TAccounts
		{
			get
			{
				return this.GetTable<TAccount>();
			}
		}
		
		public System.Data.Linq.Table<TEACH> TEACHes
		{
			get
			{
				return this.GetTable<TEACH>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Average_Score> Average_Scores
		{
			get
			{
				return this.GetTable<Average_Score>();
			}
		}
		
		public System.Data.Linq.Table<Course_Sessionss> Course_Sessionsses
		{
			get
			{
				return this.GetTable<Course_Sessionss>();
			}
		}
		
		public System.Data.Linq.Table<Student_Accumulated> Student_Accumulateds
		{
			get
			{
				return this.GetTable<Student_Accumulated>();
			}
		}
		
		public System.Data.Linq.Table<Teacher_Score> Teacher_Scores
		{
			get
			{
				return this.GetTable<Teacher_Score>();
			}
		}
		
		public System.Data.Linq.Table<View_EnrollList> View_EnrollLists
		{
			get
			{
				return this.GetTable<View_EnrollList>();
			}
		}
		
		public System.Data.Linq.Table<View_Score> View_Scores
		{
			get
			{
				return this.GetTable<View_Score>();
			}
		}
		
		public System.Data.Linq.Table<View_TeacherList> View_TeacherLists
		{
			get
			{
				return this.GetTable<View_TeacherList>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Add_Sessions")]
		public int PROC_Add_Sessions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="NVarChar(40)")] string iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Semester", DbType="Decimal(18,0)")] System.Nullable<decimal> semester, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scholastic", DbType="Decimal(18,0)")] System.Nullable<decimal> scholastic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumberOfCredits", DbType="Decimal(18,0)")] System.Nullable<decimal> numberOfCredits)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, semester, scholastic, numberOfCredits);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Add_Student")]
		public int PROC_Add_Student([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_Name", DbType="VarChar(100)")] string student_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dayofbirth", DbType="Date")] System.Nullable<System.DateTime> dayofbirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="Decimal(18,0)")] System.Nullable<decimal> phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="Bit")] System.Nullable<bool> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_IDC", DbType="Decimal(18,0)")] System.Nullable<decimal> student_IDC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Admission", DbType="Decimal(18,0)")] System.Nullable<decimal> admission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Major", DbType="Decimal(18,0)")] System.Nullable<decimal> major)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_ID, student_Name, dayofbirth, phoneNumber, gender, student_IDC, admission, major);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Add_Teacher")]
		public int PROC_Add_Teacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> teacher_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_Name", DbType="VarChar(100)")] string teacher_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dayofbirth", DbType="Date")] System.Nullable<System.DateTime> dayofbirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="Decimal(18,0)")] System.Nullable<decimal> phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="Bit")] System.Nullable<bool> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_IDC", DbType="Decimal(18,0)")] System.Nullable<decimal> teacher_IDC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teacher_ID, teacher_Name, dayofbirth, phoneNumber, gender, teacher_IDC);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Course_Enroll")]
		public int PROC_Course_Enroll([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_Name", DbType="VarChar(100)")] string student_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Session_ID", DbType="VarChar(40)")] string session_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scholastic", DbType="Decimal(18,0)")] System.Nullable<decimal> scholastic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Semester", DbType="Decimal(18,0)")] System.Nullable<decimal> semester, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Course_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> course_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_ID, student_Name, session_ID, scholastic, semester, course_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Delete_Sessions")]
		public int PROC_Delete_Sessions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="NVarChar(40)")] string iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Semester", DbType="Decimal(18,0)")] System.Nullable<decimal> semester, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scholastic", DbType="Decimal(18,0)")] System.Nullable<decimal> scholastic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, semester, scholastic);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Delete_Student")]
		public int PROC_Delete_Student([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> student_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Delete_Teacher")]
		public int PROC_Delete_Teacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> teacher_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teacher_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Student_Email_UPDATE")]
		public int PROC_Student_Email_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> id_in)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_in);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Student_ID_UPDATE")]
		public int PROC_Student_ID_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> admission_in, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> major_in, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> id_in, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] ref System.Nullable<decimal> id_out)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), admission_in, major_in, id_in, id_out);
			id_out = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Student_SAccount_UPDATE")]
		public int PROC_Student_SAccount_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> id_in, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> idc_in)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_in, idc_in);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_UPDATE_STUDENT")]
		public int PROC_UPDATE_STUDENT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_Name", DbType="VarChar(40)")] string student_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_IDC", DbType="Decimal(18,0)")] System.Nullable<decimal> student_IDC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="Bit")] System.Nullable<bool> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DayofBirth", DbType="Date")] System.Nullable<System.DateTime> dayofBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="Decimal(18,0)")] System.Nullable<decimal> phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Admission", DbType="Decimal(18,0)")] System.Nullable<decimal> admission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Major", DbType="Decimal(18,0)")] System.Nullable<decimal> major)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_ID, student_Name, student_IDC, gender, dayofBirth, phoneNumber, admission, major);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PROC_Update_Teacher")]
		public int PROC_Update_Teacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> teacher_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_Name", DbType="VarChar(40)")] string teacher_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DayofBirth", DbType="Date")] System.Nullable<System.DateTime> dayofBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="Decimal(18,0)")] System.Nullable<decimal> phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="Bit")] System.Nullable<bool> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Teacher_IDC", DbType="Decimal(18,0)")] System.Nullable<decimal> teacher_IDC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teacher_ID, teacher_Name, dayofBirth, phoneNumber, gender, teacher_IDC);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateScore")]
		public int updateScore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scholastic", DbType="Decimal(4,0)")] System.Nullable<decimal> scholastic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Semester", DbType="Decimal(18,0)")] System.Nullable<decimal> semester, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sessionss_ID", DbType="VarChar(40)")] string sessionss_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Decimal(18,0)")] System.Nullable<decimal> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Process_Score", DbType="Decimal(4,2)")] System.Nullable<decimal> process_Score, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Final_Exam", DbType="Decimal(4,2)")] System.Nullable<decimal> final_Exam)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), scholastic, semester, sessionss_ID, student_ID, process_Score, final_Exam);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Caculate_AccAvgScore", IsComposable=true)]
		public System.Nullable<decimal> FN_Caculate_AccAvgScore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_CheckAcc_Student", IsComposable=true)]
		public System.Nullable<bool> FN_CheckAcc_Student([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> pass)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, pass).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_CheckAcc_Teacher", IsComposable=true)]
		public System.Nullable<bool> FN_CheckAcc_Teacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> pass)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, pass).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Count_Credits", IsComposable=true)]
		public System.Nullable<int> FN_Count_Credits([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scholastic", DbType="Decimal(4,0)")] System.Nullable<decimal> scholastic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Semester", DbType="Int")] System.Nullable<int> semester)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, scholastic, semester).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Count_TotalCredit", IsComposable=true)]
		public System.Nullable<int> FN_Count_TotalCredit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_FindStudent", IsComposable=true)]
		public IQueryable<FN_FindStudentResult> FN_FindStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD)
		{
			return this.CreateMethodCallQuery<FN_FindStudentResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_FindTeacher", IsComposable=true)]
		public IQueryable<FN_FindTeacherResult> FN_FindTeacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Decimal(18,0)")] System.Nullable<decimal> iD)
		{
			return this.CreateMethodCallQuery<FN_FindTeacherResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Course_ID;
		
		private string _Sessionss_ID;
		
		private decimal _Teacher_ID;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private EntitySet<STUDY> _STUDies;
		
		private EntityRef<Sessionss> _Sessionss;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(string value);
    partial void OnCourse_IDChanged();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnTeacher_IDChanging(decimal value);
    partial void OnTeacher_IDChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    #endregion
		
		public Course()
		{
			this._STUDies = new EntitySet<STUDY>(new Action<STUDY>(this.attach_STUDies), new Action<STUDY>(this.detach_STUDies));
			this._Sessionss = default(EntityRef<Sessionss>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacher_IDChanging(value);
					this.SendPropertyChanging();
					this._Teacher_ID = value;
					this.SendPropertyChanged("Teacher_ID");
					this.OnTeacher_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_STUDY", Storage="_STUDies", ThisKey="Course_ID,Sessionss_ID,Scholastic,Semester", OtherKey="Course_ID,Sessionss_ID,Scholastic,Semester")]
		public EntitySet<STUDY> STUDies
		{
			get
			{
				return this._STUDies;
			}
			set
			{
				this._STUDies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_Course", Storage="_Sessionss", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sessionss Sessionss
		{
			get
			{
				return this._Sessionss.Entity;
			}
			set
			{
				Sessionss previousValue = this._Sessionss.Entity;
				if (((previousValue != value) 
							|| (this._Sessionss.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessionss.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Sessionss.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Sessionss_ID = value.Sessionss_ID;
						this._Semester = value.Semester;
						this._Scholastic = value.Scholastic;
					}
					else
					{
						this._Sessionss_ID = default(string);
						this._Semester = default(decimal);
						this._Scholastic = default(decimal);
					}
					this.SendPropertyChanged("Sessionss");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Course", Storage="_Teacher", ThisKey="Teacher_ID", OtherKey="Teacher_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Teacher_ID = value.Teacher_ID;
					}
					else
					{
						this._Teacher_ID = default(decimal);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STUDies(STUDY entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_STUDies(STUDY entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENROLL")]
	public partial class ENROLL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sessionss_ID;
		
		private decimal _Student_ID;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private EntityRef<Sessionss> _Sessionss;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    #endregion
		
		public ENROLL()
		{
			this._Sessionss = default(EntityRef<Sessionss>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_ENROLL", Storage="_Sessionss", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sessionss Sessionss
		{
			get
			{
				return this._Sessionss.Entity;
			}
			set
			{
				Sessionss previousValue = this._Sessionss.Entity;
				if (((previousValue != value) 
							|| (this._Sessionss.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessionss.Entity = null;
						previousValue.ENROLLs.Remove(this);
					}
					this._Sessionss.Entity = value;
					if ((value != null))
					{
						value.ENROLLs.Add(this);
						this._Sessionss_ID = value.Sessionss_ID;
						this._Semester = value.Semester;
						this._Scholastic = value.Scholastic;
					}
					else
					{
						this._Sessionss_ID = default(string);
						this._Semester = default(decimal);
						this._Scholastic = default(decimal);
					}
					this.SendPropertyChanged("Sessionss");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ENROLL", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.ENROLLs.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.ENROLLs.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAccount")]
	public partial class SAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Username;
		
		private string _Password;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(decimal value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public SAccount()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_SAccount", Storage="_Student", ThisKey="Username", OtherKey="Student_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.SAccount = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.SAccount = this;
						this._Username = value.Student_ID;
					}
					else
					{
						this._Username = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Score")]
	public partial class Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Student_ID;
		
		private string _Sessionss_ID;
		
		private decimal _Semester;
		
		private decimal _Scholastic;
		
		private System.Nullable<decimal> _Process_score;
		
		private System.Nullable<decimal> _Final_exam;
		
		private System.Nullable<decimal> _Average_score;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<Sessionss> _Sessionss;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    partial void OnProcess_scoreChanging(System.Nullable<decimal> value);
    partial void OnProcess_scoreChanged();
    partial void OnFinal_examChanging(System.Nullable<decimal> value);
    partial void OnFinal_examChanged();
    partial void OnAverage_scoreChanging(System.Nullable<decimal> value);
    partial void OnAverage_scoreChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Score()
		{
			this._Sessionss = default(EntityRef<Sessionss>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Process_score
		{
			get
			{
				return this._Process_score;
			}
			set
			{
				if ((this._Process_score != value))
				{
					this.OnProcess_scoreChanging(value);
					this.SendPropertyChanging();
					this._Process_score = value;
					this.SendPropertyChanged("Process_score");
					this.OnProcess_scoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Final_exam", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Final_exam
		{
			get
			{
				return this._Final_exam;
			}
			set
			{
				if ((this._Final_exam != value))
				{
					this.OnFinal_examChanging(value);
					this.SendPropertyChanging();
					this._Final_exam = value;
					this.SendPropertyChanged("Final_exam");
					this.OnFinal_examChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Average_score
		{
			get
			{
				return this._Average_score;
			}
			set
			{
				if ((this._Average_score != value))
				{
					this.OnAverage_scoreChanging(value);
					this.SendPropertyChanging();
					this._Average_score = value;
					this.SendPropertyChanged("Average_score");
					this.OnAverage_scoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_Score", Storage="_Sessionss", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sessionss Sessionss
		{
			get
			{
				return this._Sessionss.Entity;
			}
			set
			{
				Sessionss previousValue = this._Sessionss.Entity;
				if (((previousValue != value) 
							|| (this._Sessionss.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessionss.Entity = null;
						previousValue.Scores.Remove(this);
					}
					this._Sessionss.Entity = value;
					if ((value != null))
					{
						value.Scores.Add(this);
						this._Sessionss_ID = value.Sessionss_ID;
						this._Semester = value.Semester;
						this._Scholastic = value.Scholastic;
					}
					else
					{
						this._Sessionss_ID = default(string);
						this._Semester = default(decimal);
						this._Scholastic = default(decimal);
					}
					this.SendPropertyChanged("Sessionss");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Score", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Scores.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Scores.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sessionss")]
	public partial class Sessionss : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sessionss_ID;
		
		private string _Sessionss_Name;
		
		private decimal _Semester;
		
		private decimal _Scholastic;
		
		private decimal _Numberofcredits;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<ENROLL> _ENROLLs;
		
		private EntitySet<Score> _Scores;
		
		private EntitySet<TEACH> _TEACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnSessionss_NameChanging(string value);
    partial void OnSessionss_NameChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    partial void OnNumberofcreditsChanging(decimal value);
    partial void OnNumberofcreditsChanged();
    #endregion
		
		public Sessionss()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._ENROLLs = new EntitySet<ENROLL>(new Action<ENROLL>(this.attach_ENROLLs), new Action<ENROLL>(this.detach_ENROLLs));
			this._Scores = new EntitySet<Score>(new Action<Score>(this.attach_Scores), new Action<Score>(this.detach_Scores));
			this._TEACHes = new EntitySet<TEACH>(new Action<TEACH>(this.attach_TEACHes), new Action<TEACH>(this.detach_TEACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this.OnSessionss_NameChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_Name = value;
					this.SendPropertyChanged("Sessionss_Name");
					this.OnSessionss_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberofcredits", DbType="Decimal(18,0) NOT NULL")]
		public decimal Numberofcredits
		{
			get
			{
				return this._Numberofcredits;
			}
			set
			{
				if ((this._Numberofcredits != value))
				{
					this.OnNumberofcreditsChanging(value);
					this.SendPropertyChanging();
					this._Numberofcredits = value;
					this.SendPropertyChanged("Numberofcredits");
					this.OnNumberofcreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_Course", Storage="_Courses", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_ENROLL", Storage="_ENROLLs", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic")]
		public EntitySet<ENROLL> ENROLLs
		{
			get
			{
				return this._ENROLLs;
			}
			set
			{
				this._ENROLLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_Score", Storage="_Scores", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic")]
		public EntitySet<Score> Scores
		{
			get
			{
				return this._Scores;
			}
			set
			{
				this._Scores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_TEACH", Storage="_TEACHes", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic")]
		public EntitySet<TEACH> TEACHes
		{
			get
			{
				return this._TEACHes;
			}
			set
			{
				this._TEACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = null;
		}
		
		private void attach_ENROLLs(ENROLL entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = this;
		}
		
		private void detach_ENROLLs(ENROLL entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = null;
		}
		
		private void attach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = this;
		}
		
		private void detach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = null;
		}
		
		private void attach_TEACHes(TEACH entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = this;
		}
		
		private void detach_TEACHes(TEACH entity)
		{
			this.SendPropertyChanging();
			entity.Sessionss = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private System.DateTime _Dayofbirth;
		
		private string _Email;
		
		private System.Nullable<decimal> _PhoneNumber;
		
		private bool _Gender;
		
		private decimal _Student_IDC;
		
		private System.Nullable<decimal> _Admission;
		
		private System.Nullable<decimal> _Major;
		
		private EntitySet<ENROLL> _ENROLLs;
		
		private EntityRef<SAccount> _SAccount;
		
		private EntitySet<Score> _Scores;
		
		private EntitySet<STUDY> _STUDies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnStudent_NameChanging(string value);
    partial void OnStudent_NameChanged();
    partial void OnDayofbirthChanging(System.DateTime value);
    partial void OnDayofbirthChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(System.Nullable<decimal> value);
    partial void OnPhoneNumberChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnStudent_IDCChanging(decimal value);
    partial void OnStudent_IDCChanged();
    partial void OnAdmissionChanging(System.Nullable<decimal> value);
    partial void OnAdmissionChanged();
    partial void OnMajorChanging(System.Nullable<decimal> value);
    partial void OnMajorChanged();
    #endregion
		
		public Student()
		{
			this._ENROLLs = new EntitySet<ENROLL>(new Action<ENROLL>(this.attach_ENROLLs), new Action<ENROLL>(this.detach_ENROLLs));
			this._SAccount = default(EntityRef<SAccount>);
			this._Scores = new EntitySet<Score>(new Action<Score>(this.attach_Scores), new Action<Score>(this.detach_Scores));
			this._STUDies = new EntitySet<STUDY>(new Action<STUDY>(this.attach_STUDies), new Action<STUDY>(this.detach_STUDies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this.OnStudent_NameChanging(value);
					this.SendPropertyChanging();
					this._Student_Name = value;
					this.SendPropertyChanged("Student_Name");
					this.OnStudent_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dayofbirth", DbType="Date NOT NULL")]
		public System.DateTime Dayofbirth
		{
			get
			{
				return this._Dayofbirth;
			}
			set
			{
				if ((this._Dayofbirth != value))
				{
					this.OnDayofbirthChanging(value);
					this.SendPropertyChanging();
					this._Dayofbirth = value;
					this.SendPropertyChanged("Dayofbirth");
					this.OnDayofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_IDC", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_IDC
		{
			get
			{
				return this._Student_IDC;
			}
			set
			{
				if ((this._Student_IDC != value))
				{
					this.OnStudent_IDCChanging(value);
					this.SendPropertyChanging();
					this._Student_IDC = value;
					this.SendPropertyChanged("Student_IDC");
					this.OnStudent_IDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admission", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Admission
		{
			get
			{
				return this._Admission;
			}
			set
			{
				if ((this._Admission != value))
				{
					this.OnAdmissionChanging(value);
					this.SendPropertyChanging();
					this._Admission = value;
					this.SendPropertyChanged("Admission");
					this.OnAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ENROLL", Storage="_ENROLLs", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<ENROLL> ENROLLs
		{
			get
			{
				return this._ENROLLs;
			}
			set
			{
				this._ENROLLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_SAccount", Storage="_SAccount", ThisKey="Student_ID", OtherKey="Username", IsUnique=true, IsForeignKey=false)]
		public SAccount SAccount
		{
			get
			{
				return this._SAccount.Entity;
			}
			set
			{
				SAccount previousValue = this._SAccount.Entity;
				if (((previousValue != value) 
							|| (this._SAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAccount.Entity = null;
						previousValue.Student = null;
					}
					this._SAccount.Entity = value;
					if ((value != null))
					{
						value.Student = this;
					}
					this.SendPropertyChanged("SAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Score", Storage="_Scores", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<Score> Scores
		{
			get
			{
				return this._Scores;
			}
			set
			{
				this._Scores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_STUDY", Storage="_STUDies", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<STUDY> STUDies
		{
			get
			{
				return this._STUDies;
			}
			set
			{
				this._STUDies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ENROLLs(ENROLL entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_ENROLLs(ENROLL entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_STUDies(STUDY entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_STUDies(STUDY entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STUDY")]
	public partial class STUDY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Course_ID;
		
		private decimal _Student_ID;
		
		private string _Sessionss_ID;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(string value);
    partial void OnCourse_IDChanged();
    partial void OnStudent_IDChanging(decimal value);
    partial void OnStudent_IDChanged();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    #endregion
		
		public STUDY()
		{
			this._Course = default(EntityRef<Course>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_STUDY", Storage="_Course", ThisKey="Course_ID,Sessionss_ID,Scholastic,Semester", OtherKey="Course_ID,Sessionss_ID,Scholastic,Semester", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.STUDies.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.STUDies.Add(this);
						this._Course_ID = value.Course_ID;
						this._Sessionss_ID = value.Sessionss_ID;
						this._Scholastic = value.Scholastic;
						this._Semester = value.Semester;
					}
					else
					{
						this._Course_ID = default(string);
						this._Sessionss_ID = default(string);
						this._Scholastic = default(decimal);
						this._Semester = default(decimal);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_STUDY", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.STUDies.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.STUDies.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAccount")]
	public partial class TAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Username;
		
		private string _Password;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(decimal value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public TAccount()
		{
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TAccount", Storage="_Teacher", ThisKey="Username", OtherKey="Teacher_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.TAccount = null;
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.TAccount = this;
						this._Username = value.Teacher_ID;
					}
					else
					{
						this._Username = default(decimal);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEACH")]
	public partial class TEACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sessionss_ID;
		
		private decimal _Teacher_ID;
		
		private decimal _Semester;
		
		private decimal _Scholastic;
		
		private EntityRef<Sessionss> _Sessionss;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionss_IDChanging(string value);
    partial void OnSessionss_IDChanged();
    partial void OnTeacher_IDChanging(decimal value);
    partial void OnTeacher_IDChanged();
    partial void OnSemesterChanging(decimal value);
    partial void OnSemesterChanged();
    partial void OnScholasticChanging(decimal value);
    partial void OnScholasticChanged();
    #endregion
		
		public TEACH()
		{
			this._Sessionss = default(EntityRef<Sessionss>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionss_IDChanging(value);
					this.SendPropertyChanging();
					this._Sessionss_ID = value;
					this.SendPropertyChanged("Sessionss_ID");
					this.OnSessionss_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacher_IDChanging(value);
					this.SendPropertyChanging();
					this._Teacher_ID = value;
					this.SendPropertyChanged("Teacher_ID");
					this.OnTeacher_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					if (this._Sessionss.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticChanging(value);
					this.SendPropertyChanging();
					this._Scholastic = value;
					this.SendPropertyChanged("Scholastic");
					this.OnScholasticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessionss_TEACH", Storage="_Sessionss", ThisKey="Sessionss_ID,Semester,Scholastic", OtherKey="Sessionss_ID,Semester,Scholastic", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sessionss Sessionss
		{
			get
			{
				return this._Sessionss.Entity;
			}
			set
			{
				Sessionss previousValue = this._Sessionss.Entity;
				if (((previousValue != value) 
							|| (this._Sessionss.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessionss.Entity = null;
						previousValue.TEACHes.Remove(this);
					}
					this._Sessionss.Entity = value;
					if ((value != null))
					{
						value.TEACHes.Add(this);
						this._Sessionss_ID = value.Sessionss_ID;
						this._Semester = value.Semester;
						this._Scholastic = value.Scholastic;
					}
					else
					{
						this._Sessionss_ID = default(string);
						this._Semester = default(decimal);
						this._Scholastic = default(decimal);
					}
					this.SendPropertyChanged("Sessionss");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TEACH", Storage="_Teacher", ThisKey="Teacher_ID", OtherKey="Teacher_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.TEACHes.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.TEACHes.Add(this);
						this._Teacher_ID = value.Teacher_ID;
					}
					else
					{
						this._Teacher_ID = default(decimal);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Teacher_ID;
		
		private string _Teacher_Name;
		
		private System.DateTime _Dayofbirth;
		
		private string _Email;
		
		private System.Nullable<decimal> _PhoneNumber;
		
		private bool _Gender;
		
		private decimal _Teacher_IDC;
		
		private EntitySet<Course> _Courses;
		
		private EntityRef<TAccount> _TAccount;
		
		private EntitySet<TEACH> _TEACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacher_IDChanging(decimal value);
    partial void OnTeacher_IDChanged();
    partial void OnTeacher_NameChanging(string value);
    partial void OnTeacher_NameChanged();
    partial void OnDayofbirthChanging(System.DateTime value);
    partial void OnDayofbirthChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(System.Nullable<decimal> value);
    partial void OnPhoneNumberChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnTeacher_IDCChanging(decimal value);
    partial void OnTeacher_IDCChanged();
    #endregion
		
		public Teacher()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._TAccount = default(EntityRef<TAccount>);
			this._TEACHes = new EntitySet<TEACH>(new Action<TEACH>(this.attach_TEACHes), new Action<TEACH>(this.detach_TEACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					this.OnTeacher_IDChanging(value);
					this.SendPropertyChanging();
					this._Teacher_ID = value;
					this.SendPropertyChanged("Teacher_ID");
					this.OnTeacher_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this.OnTeacher_NameChanging(value);
					this.SendPropertyChanging();
					this._Teacher_Name = value;
					this.SendPropertyChanged("Teacher_Name");
					this.OnTeacher_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dayofbirth", DbType="Date NOT NULL")]
		public System.DateTime Dayofbirth
		{
			get
			{
				return this._Dayofbirth;
			}
			set
			{
				if ((this._Dayofbirth != value))
				{
					this.OnDayofbirthChanging(value);
					this.SendPropertyChanging();
					this._Dayofbirth = value;
					this.SendPropertyChanged("Dayofbirth");
					this.OnDayofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_IDC", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_IDC
		{
			get
			{
				return this._Teacher_IDC;
			}
			set
			{
				if ((this._Teacher_IDC != value))
				{
					this.OnTeacher_IDCChanging(value);
					this.SendPropertyChanging();
					this._Teacher_IDC = value;
					this.SendPropertyChanged("Teacher_IDC");
					this.OnTeacher_IDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Course", Storage="_Courses", ThisKey="Teacher_ID", OtherKey="Teacher_ID")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TAccount", Storage="_TAccount", ThisKey="Teacher_ID", OtherKey="Username", IsUnique=true, IsForeignKey=false)]
		public TAccount TAccount
		{
			get
			{
				return this._TAccount.Entity;
			}
			set
			{
				TAccount previousValue = this._TAccount.Entity;
				if (((previousValue != value) 
							|| (this._TAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAccount.Entity = null;
						previousValue.Teacher = null;
					}
					this._TAccount.Entity = value;
					if ((value != null))
					{
						value.Teacher = this;
					}
					this.SendPropertyChanged("TAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TEACH", Storage="_TEACHes", ThisKey="Teacher_ID", OtherKey="Teacher_ID")]
		public EntitySet<TEACH> TEACHes
		{
			get
			{
				return this._TEACHes;
			}
			set
			{
				this._TEACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_TEACHes(TEACH entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_TEACHes(TEACH entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Average_Score")]
	public partial class Average_Score
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private System.Nullable<decimal> _TotalCredits;
		
		private System.Nullable<decimal> _SumAverage;
		
		public Average_Score()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCredits", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TotalCredits
		{
			get
			{
				return this._TotalCredits;
			}
			set
			{
				if ((this._TotalCredits != value))
				{
					this._TotalCredits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAverage", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> SumAverage
		{
			get
			{
				return this._SumAverage;
			}
			set
			{
				if ((this._SumAverage != value))
				{
					this._SumAverage = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_Sessionss")]
	public partial class Course_Sessionss
	{
		
		private string _Sessionss_Name;
		
		private string _Sessionss_ID;
		
		private string _Course_ID;
		
		private decimal _Semester;
		
		private decimal _Scholastic;
		
		private decimal _Teacher_ID;
		
		private string _Teacher_Name;
		
		private decimal _Numberofcredits;
		
		public Course_Sessionss()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this._Sessionss_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this._Sessionss_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this._Course_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					this._Teacher_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this._Teacher_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberofcredits", DbType="Decimal(18,0) NOT NULL")]
		public decimal Numberofcredits
		{
			get
			{
				return this._Numberofcredits;
			}
			set
			{
				if ((this._Numberofcredits != value))
				{
					this._Numberofcredits = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Accumulated")]
	public partial class Student_Accumulated
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private System.Nullable<int> _AccCredits;
		
		private System.Nullable<decimal> _Acc_Score;
		
		public Student_Accumulated()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccCredits", DbType="Int")]
		public System.Nullable<int> AccCredits
		{
			get
			{
				return this._AccCredits;
			}
			set
			{
				if ((this._AccCredits != value))
				{
					this._AccCredits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_Score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Acc_Score
		{
			get
			{
				return this._Acc_Score;
			}
			set
			{
				if ((this._Acc_Score != value))
				{
					this._Acc_Score = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher_Scores")]
	public partial class Teacher_Score
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private string _Sessionss_ID;
		
		private string _Sessionss_Name;
		
		private string _Course_ID;
		
		private decimal _Teacher_ID;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private decimal _Numberofcredits;
		
		private System.Nullable<decimal> _Process_score;
		
		private System.Nullable<decimal> _Final_exam;
		
		private System.Nullable<decimal> _Average_score;
		
		private System.Nullable<bool> _Status;
		
		public Teacher_Score()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this._Sessionss_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this._Sessionss_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this._Course_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					this._Teacher_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberofcredits", DbType="Decimal(18,0) NOT NULL")]
		public decimal Numberofcredits
		{
			get
			{
				return this._Numberofcredits;
			}
			set
			{
				if ((this._Numberofcredits != value))
				{
					this._Numberofcredits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Process_score
		{
			get
			{
				return this._Process_score;
			}
			set
			{
				if ((this._Process_score != value))
				{
					this._Process_score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Final_exam", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Final_exam
		{
			get
			{
				return this._Final_exam;
			}
			set
			{
				if ((this._Final_exam != value))
				{
					this._Final_exam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Average_score
		{
			get
			{
				return this._Average_score;
			}
			set
			{
				if ((this._Average_score != value))
				{
					this._Average_score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EnrollList")]
	public partial class View_EnrollList
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private string _Sessionss_ID;
		
		private string _Sessionss_Name;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private decimal _Numberofcredits;
		
		public View_EnrollList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this._Sessionss_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this._Sessionss_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberofcredits", DbType="Decimal(18,0) NOT NULL")]
		public decimal Numberofcredits
		{
			get
			{
				return this._Numberofcredits;
			}
			set
			{
				if ((this._Numberofcredits != value))
				{
					this._Numberofcredits = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Scores")]
	public partial class View_Score
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private string _Sessionss_ID;
		
		private string _Sessionss_Name;
		
		private string _Course_ID;
		
		private decimal _Scholastic;
		
		private decimal _Semester;
		
		private decimal _Numberofcredits;
		
		private System.Nullable<decimal> _Process_score;
		
		private System.Nullable<decimal> _Final_exam;
		
		private System.Nullable<decimal> _Average_score;
		
		private System.Nullable<bool> _Status;
		
		private string _LetterScore;
		
		private System.Nullable<decimal> _FourPoitingScore;
		
		public View_Score()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this._Sessionss_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this._Sessionss_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this._Course_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberofcredits", DbType="Decimal(18,0) NOT NULL")]
		public decimal Numberofcredits
		{
			get
			{
				return this._Numberofcredits;
			}
			set
			{
				if ((this._Numberofcredits != value))
				{
					this._Numberofcredits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Process_score
		{
			get
			{
				return this._Process_score;
			}
			set
			{
				if ((this._Process_score != value))
				{
					this._Process_score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Final_exam", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Final_exam
		{
			get
			{
				return this._Final_exam;
			}
			set
			{
				if ((this._Final_exam != value))
				{
					this._Final_exam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average_score", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Average_score
		{
			get
			{
				return this._Average_score;
			}
			set
			{
				if ((this._Average_score != value))
				{
					this._Average_score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterScore", DbType="VarChar(2)")]
		public string LetterScore
		{
			get
			{
				return this._LetterScore;
			}
			set
			{
				if ((this._LetterScore != value))
				{
					this._LetterScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FourPoitingScore", DbType="Decimal(2,1)")]
		public System.Nullable<decimal> FourPoitingScore
		{
			get
			{
				return this._FourPoitingScore;
			}
			set
			{
				if ((this._FourPoitingScore != value))
				{
					this._FourPoitingScore = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_TeacherList")]
	public partial class View_TeacherList
	{
		
		private string _Sessionss_ID;
		
		private string _Sessionss_Name;
		
		private decimal _Teacher_ID;
		
		private string _Teacher_Name;
		
		private decimal _Semester;
		
		private decimal _Scholastic;
		
		public View_TeacherList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_ID
		{
			get
			{
				return this._Sessionss_ID;
			}
			set
			{
				if ((this._Sessionss_ID != value))
				{
					this._Sessionss_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessionss_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Sessionss_Name
		{
			get
			{
				return this._Sessionss_Name;
			}
			set
			{
				if ((this._Sessionss_Name != value))
				{
					this._Sessionss_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					this._Teacher_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this._Teacher_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Decimal(18,0) NOT NULL")]
		public decimal Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this._Semester = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scholastic", DbType="Decimal(4,0) NOT NULL")]
		public decimal Scholastic
		{
			get
			{
				return this._Scholastic;
			}
			set
			{
				if ((this._Scholastic != value))
				{
					this._Scholastic = value;
				}
			}
		}
	}
	
	public partial class FN_FindStudentResult
	{
		
		private decimal _Student_ID;
		
		private string _Student_Name;
		
		private System.DateTime _Dayofbirth;
		
		private string _Email;
		
		private System.Nullable<decimal> _PhoneNumber;
		
		private bool _Gender;
		
		private decimal _Student_IDC;
		
		private System.Nullable<decimal> _Admission;
		
		private System.Nullable<decimal> _Major;
		
		public FN_FindStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Student_Name
		{
			get
			{
				return this._Student_Name;
			}
			set
			{
				if ((this._Student_Name != value))
				{
					this._Student_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dayofbirth", DbType="Date NOT NULL")]
		public System.DateTime Dayofbirth
		{
			get
			{
				return this._Dayofbirth;
			}
			set
			{
				if ((this._Dayofbirth != value))
				{
					this._Dayofbirth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_IDC", DbType="Decimal(18,0) NOT NULL")]
		public decimal Student_IDC
		{
			get
			{
				return this._Student_IDC;
			}
			set
			{
				if ((this._Student_IDC != value))
				{
					this._Student_IDC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admission", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Admission
		{
			get
			{
				return this._Admission;
			}
			set
			{
				if ((this._Admission != value))
				{
					this._Admission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this._Major = value;
				}
			}
		}
	}
	
	public partial class FN_FindTeacherResult
	{
		
		private decimal _Teacher_ID;
		
		private string _Teacher_Name;
		
		private System.DateTime _Dayofbirth;
		
		private string _Email;
		
		private System.Nullable<decimal> _PhoneNumber;
		
		private bool _Gender;
		
		private decimal _Teacher_IDC;
		
		public FN_FindTeacherResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_ID", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_ID
		{
			get
			{
				return this._Teacher_ID;
			}
			set
			{
				if ((this._Teacher_ID != value))
				{
					this._Teacher_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this._Teacher_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dayofbirth", DbType="Date NOT NULL")]
		public System.DateTime Dayofbirth
		{
			get
			{
				return this._Dayofbirth;
			}
			set
			{
				if ((this._Dayofbirth != value))
				{
					this._Dayofbirth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_IDC", DbType="Decimal(18,0) NOT NULL")]
		public decimal Teacher_IDC
		{
			get
			{
				return this._Teacher_IDC;
			}
			set
			{
				if ((this._Teacher_IDC != value))
				{
					this._Teacher_IDC = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
